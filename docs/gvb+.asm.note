floating point format:
    byte0          exponent
    byte1  bit7    sign
           bit0-6  higher mantissa
    byte2          mantissa
    byte3          mantissa
    byte4          lower mantissa

    if exponent is 0, the number is zero, regardless of the mantissa and sign.

subroutine:

    6634    increment ($5E, $5F) and read a character into A, ignoring spaces
                C = if A is not digit
    663A    read a character into A without incrementing ($5E, $5F), ignoring spaces
                C = if A is not digit
    679D    out of memory error
    684A    close all files opend by OPEN statements
    9B43    C = if A is uppercase
    9B4D    C = if A is not digit
    9B58    read an identifier and store it in space starting with $B8DB,
                Y = length of identifier
                ($5E, $5F) = address before identifier
    9CFD    syntax error
    9ED5    overflow error
    A095    multiply FAC1 by 10
    A199    round FAC1 then store FAC1 into (X, Y)
    A1C2    copy FAC2 into FAC1
    A1E3    round FAC1
    A1D3    round FAC1 and then copy FAC1 into FAC2
                A = exponent of FAC1
    A23A    compare FAC1 with (A, Y)
    ACE2    clear screen and text buffer
    AD06    clear screen

data:
    $B808   variable type flag, $00 = numeric, $FF = string

    $B809   variable type flag, $00 = float, $80 = integer

    $B80B
            bit7   is executing subscript, FOR, or FN

    $B811
            TRACE flag, #$00 or #$80

    $B814, $B815
            current line number

    $6F     exponent of FAC1 (float accumulator 1)

    $70-$73
            mantissa of FAC1 (including assumed leading 1)

    $74     sign of FAC1 (bit7)

    $B80E   extra mantissa of FAC1

    $77     exponenet of FAC2

    $78-$7B
            mantissa of FAC2 (including assuming bit)

    $7C     sign of FAC2 (bit7)

    $B960   extra mantissa of FAC2

    $7D     sign of FAC1 xor sign of FAC2

    $B94D  FAC1 overflow byte

    $B94E
            bit7   if .BAS file is greater than 8KB

    $BA8D, $BA8E
            end address of .BAS file content

    $5E, $5F
            address of current character

    $B8C9, $B8CA
            starting address of variable table

    $B8CF, $B8D0
            

TODO:
    数字字面量可以用空格分隔？
    AND、OR、NOT 是 bitwise？
    GOTO 10 NOT EXECUTED
    FN 自变量可以是字符串 ?


----------------------------------------------------
$B98F, $B990  = $2000
$B991, $B992  = $6000
$B993, $B994  = $BD00
$B995, $B996  = $BF00
$B8D9 ~ $B92A = 0
$B812    normal, inverse, ... ?
$B804  = 0
$B8D1, $B8D2  = $6000
$B951, $B952  = first line number of current chunk of the .BAS file
$B8C7, $B8C8  = end of .BAS chunk
$B8CD, $B8CE  = end of .BAS chunk
$B8CB, $B8CC  = end of .BAS chunk
$B968  = 0
$B8C4  = 0
$B810  = 0
$B92B ~ $B937  = 0
$B8D4  = 0

----------------------------------
variable table
entry:
        byte0   bit7,bit6  = 11 int
                           = 00 float
                           = 01 str
                           = 10 subscript / FOR / FN ??
                bit0~bit3  variable length - 1
        N bytes            variable name
        data               if subscript / FOR / FN, 5 bytes
                           if float, 5 bytes
                           if str, 3 bytes
                           if int, 2 bytes